---
name: Run these tests on a VM
on:
  workflow_dispatch:
    inputs:
      baseline:
        description: The baseline version of Fluent Bit to compare against.
        required: false
        type: string
        default: fluent/fluent-bit:latest
      ref:
        description: The branch name to use for comparison against, this will be built as a container to compare with.
        required: true
        type: string
        default: https://github.com/fluent/fluent-bit.git#master
      vm-name:
        description: The unique VM name to use, it will destroy any existing instances.
        required: true
        type: string
        default: perf-test-master
      duration:
        description: The time in minutes to run the test for.
        required: false
        type: string
        default: '15'
      custom-config-ref:
        description: The full Git reference to any test template overrides to run with.
        required: false
        type: string
        default: ""
      custom-config-dir:
        description: An optional subdirectory to use as the location for the test files.
        required: false
        type: string
        default: ""
      custom-environment:
        description: A comma-separated string representing any custom variables to pass.
        required: false
        type: string
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.vm-name }}
  cancel-in-progress: false

env:
  VM_NAME: ${{ github.event.inputs.vm-name }}
jobs:
  setup-vm-instance:
    runs-on: ubuntu-latest
    steps:
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_SA }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Use gcloud CLI'
        run: gcloud info

      - name: Set up defaults
        run: |
          gcloud config set compute/zone us-east1-c
        shell: bash

      - name: Destroy any previous VM
        continue-on-error: true
        run: |
          gcloud compute instances delete "$VM_NAME" -q || true
        shell: bash

      - name: Deploy VM
        run: |
          gcloud compute instances create "$VM_NAME" --image="fb-perf-test-ubuntu-2004"
            --metadata=SELF_DESTRUCT_INTERVAL_MINUTES=720
          sleep 30
        shell: bash

      - name: Wait for SSH access
        timeout-minutes: 2
        run: |
          echo "Waiting for SSH access to $VM_NAME..."
          until gcloud compute ssh "$VM_NAME" -q --command="true" 2> /dev/null; do
            echo -n '.'
            sleep 1
          done
          echo
          echo "Successfully connected to $VM_NAME"
          gcloud compute ssh "$VM_NAME" -q --command="sudo usermod -aG docker $USER"
        shell: bash

  # Allows us just to re-run here
  run-tests-on-vm-instance:
    runs-on: ubuntu-latest
    needs:
      - setup-vm-instance
    steps:
      - name: Run tests on VM
        run: |
          gcloud compute ssh "$VM_NAME" -q --command="\
            export BASELINE="${{ github.event.inputs.baseline }}"; \
            export REF="${{ github.event.inputs.ref }}"; \
            export CUSTOM_CONFIG_DIR="${{ github.event.inputs.custom-config-dir }}"; \
            export CUSTOM_CONFIG_REF="${{ github.event.inputs.custom-config-ref }}"; \
            export CUSTOM_ENVIRONMENT="${{ github.event.inputs.custom-environment }}"; \
            export NAME="${{ github.event.inputs.vm-name }}"; \
            export DURATION="${{ github.event.inputs.duration }}"; \
            export OUTPUT_DIR="~/output"; \
            /opt/fluent-bit-ci/run-test.sh"
        shell: bash

      - name: Collect info
        if: always()
        run: |
          gcloud compute scp --force-key-file-overwrite --recurse "$VM_NAME":~/output output
        shell: bash

      - name: Upload any results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: output/

      - name: Collect config
        if: always()
        run: |
          gcloud compute scp --force-key-file-overwrite --recurse "$VM_NAME":~/custom-config custom-config
        shell: bash

      - name: Upload any config
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: config
          path: custom-config/

      - name: Get debug information if possible on failure
        continue-on-error: true
        if: failure()
        timeout-minutes: 5
        run: |
          gcloud compute ssh "$VM_NAME" -q --command="sudo grep startup-script /var/log/messages" || true
          gcloud compute ssh "$VM_NAME" -q --command="sudo grep startup-script /var/log/syslog" || true
          gcloud compute ssh "$VM_NAME" -q --command="rpm -qa" || true
          gcloud compute ssh "$VM_NAME" -q --command="dpkg -l" || true
          gcloud compute ssh "$VM_NAME" -q --command="systemctl status" || true
          gcloud compute ssh "$VM_NAME" -q --command="ls -lR" || true
        shell: bash

      - name: Destroy VM
        # Does not run on failure for debug within the self-destruct interval or until next run
        run: |
          gcloud compute instances delete "$VM_NAME" -q
        shell: bash
